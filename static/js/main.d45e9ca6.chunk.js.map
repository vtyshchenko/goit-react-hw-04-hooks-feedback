{"version":3,"sources":["components/Feedback/Statistics/Statistisc.module.scss","components/Feedback/FeedbackOptions/FeedbackOptions.module.scss","components/Feedback/Feedback.module.scss","components/Feedback/Section/Section.module.scss","components/Feedback/Notification/Notification.module.scss","components/Feedback/Thanks/Thanks.module.scss","components/Feedback/Statistics/Statistics.js","components/Feedback/FeedbackOptions/FeedbackOptions.js","components/Feedback/Section/Section.js","components/Feedback/Notification/Notification.js","components/Feedback/Thanks/Thanks.js","components/Feedback/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","stat","item","itemTotal","percent","FeedbackOptions","options","onLeaveFeedback","map","optionItem","index","type","button","join","onClick","Section","title","children","section","Notification","message","propTypes","PropTypes","string","isRequired","Thanks","text","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","countTotal","componenet","container","idx","state","window","count","toFixed","countPositiveFeedbackPercentage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d45e9ca6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat\":\"Statistisc_stat__2GX8Z\",\"item\":\"Statistisc_item__3Vuly\",\"percent\":\"Statistisc_percent__1Cu03\",\"itemTotal\":\"Statistisc_itemTotal__kdM1e\",\"good\":\"Statistisc_good__1Mq7_\",\"neutral\":\"Statistisc_neutral__2X3Pk\",\"bad\":\"Statistisc_bad__UKk2C\",\"total\":\"Statistisc_total__3Gfih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"FeedbackOptions_options__sV8yS\",\"button\":\"FeedbackOptions_button__2kCKO\",\"Good\":\"FeedbackOptions_Good__a5TCF\",\"Neutral\":\"FeedbackOptions_Neutral__3wApr\",\"Bad\":\"FeedbackOptions_Bad__Q7aR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"componenet\":\"Feedback_componenet__34cop\",\"container\":\"Feedback_container__32CHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__SNs9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__Ppz9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Thanks_text__1izNm\"};","import PropTypes from 'prop-types';\n\nimport styles from './Statistisc.module.scss';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div className={styles.stat}>\n      <p className={styles.item}>\n        Good: <span className={styles.good}>{good}</span>\n      </p>\n      <p className={styles.item}>\n        Neutral: <span className={styles.neutral}>{neutral}</span>\n      </p>\n      <p className={styles.item}>\n        Bad: <span className={styles.bad}>{bad}</span>\n      </p>\n      <p className={styles.itemTotal}>\n        Total: <span className={styles.total}>{total}</span>\n      </p>\n\n      <p className={styles.percent}>Positive feedback: {positivePercentage} %</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nimport styles from './FeedbackOptions.module.scss';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={styles.options}>\n      {options.map((optionItem, index) => (\n        <button\n          type=\"button\"\n          className={[styles.button, styles[optionItem]].join(' ')}\n          key={optionItem}\n          onClick={() => onLeaveFeedback(index)}\n        >\n          {optionItem}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nimport styles from './Section.module.scss';\n\nfunction Section({ title, children }) {\n  return (\n    <>\n      <h2 className={styles.section}>{title}</h2>\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nimport styles from './Notification.module.scss';\n\nfunction Notification({ message }) {\n  return <p className={styles.Notification}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\n\nimport styles from './Thanks.module.scss';\n\nfunction Thanks({ message }) {\n  return (\n    <div>\n      <p className={styles.text}>{message}</p>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Thanks;\n","import { useState } from 'react';\nimport Statistics from './Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport Section from './Section';\nimport Notification from './Notification';\nimport Thanks from './Thanks';\n\nimport styles from './Feedback.module.scss';\n\nconst options = ['Good', 'Neutral', 'Bad'];\n\nfunction Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  function countTotalFeedback() {\n    return good + neutral + bad;\n  }\n\n  function countPositiveFeedbackPercentage() {\n    const count = countTotalFeedback();\n    return count > 0 ? ((good * 100) / count).toFixed(2) : 0;\n  }\n\n  function onLeaveFeedback(idx) {\n    switch (options[idx]) {\n      case 'Good':\n        setGood(state => state + 1);\n        window['message'] = 'Thanks for your feedback. We are waiting for you again soon)))';\n        break;\n      case 'Neutral':\n        setNeutral(state => state + 1);\n        window['message'] = 'Thanks for your feedback. We will work on ourselves';\n        break;\n      case 'Bad':\n        setBad(state => state + 1);\n        window['message'] =\n          'Thanks for your feedback. Sorry to keep you unhappy. We will work on ourselves so that does not happen again';\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const countTotal = countTotalFeedback();\n\n  return (\n    <div className={styles.componenet}>\n      <div className={styles.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n        </Section>\n        {countTotal ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotal}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"There is no feedback (((\" />\n        )}\n      </div>\n\n      {countTotal && <Thanks message={window['message']} />}\n    </div>\n  );\n}\n\nexport default Feedback;\n","import Feedback from './components/Feedback';\n\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}